$services = Get-WmiObject win32_service | Where-Object { $_.PathName -notlike '"*"' -and $_.PathName -like '* *' }

$vulnerableServices = @()

foreach ($service in $services) {
    # Extract the executable path (before any parameters)
    $path = if ($service.PathName -match '^(.*?\.exe)') { $matches[1] } else { $null }

    if ($path -and -not $path.StartsWith('"') -and $path.Contains(' ')) {
        # Split the path into its directories
        $directories = Split-Path $path -Parent -Resolve

        # Check each directory for write permissions
        foreach ($dir in $directories) {
            $hasWrite = $false
            try {
                $acl = Get-Acl -Path $dir
                foreach ($access in $acl.Access) {
                    if ($access.FileSystemRights -band [System.Security.AccessControl.FileSystemRights]::Write) {
                        $hasWrite = $true
                        break
                    }
                }
            } catch {
                # Error might occur if we don't have permissions to check the ACL, assume no write access in this case
            }

            if ($hasWrite) {
                $vulnerableServices += $service
                break
            }
        }
    }
}

if ($vulnerableServices.Count -gt 0) {
    $vulnerableServices | Format-Table DisplayName, PathName -AutoSize | Out-File "$env:USERPROFILE\Desktop\VulnerableServices.txt"
    Add-Type -AssemblyName PresentationFramework
    [System.Windows.MessageBox]::Show("Vulnerable services found! Check the VulnerableServices.txt on your desktop for details.", "Warning", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Warning)
}

Write-Host "Total vulnerable services: $($vulnerableServices.Count)"
